plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.1'
    id 'io.spring.dependency-management' version '1.1.0'
}

def projectVersion = project.property('version')
def mapstructVersion = project.property('mapstruct.core-version')
def projectVersionPrefix = '-SNAPSHOT'
def auth0JavaJwtVersion = project.property('auth0.java-jwt-version')
def springStarterMailVersion = project.property('spring-starter-mail-version')
def lombokVersion = project.property('lombok-version')

group = 'com.platform'
version = projectVersion + projectVersionPrefix
sourceCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

allprojects {
    apply plugin: 'java'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    dependencies {
        compileOnly "org.projectlombok:lombok:${lombokVersion}"
        annotationProcessor "org.projectlombok:lombok:${lombokVersion}"


        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
        implementation "org.mapstruct:mapstruct:${mapstructVersion}"
        annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"

        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        testAnnotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
        testCompileOnly "org.projectlombok:lombok:${lombokVersion}"
        testAnnotationProcessor"org.projectlombok:lombok:${lombokVersion}"

        runtimeOnly 'org.postgresql:postgresql'
    }
}

project("platform-core") {
    dependencies {
        implementation "org.springframework.boot:spring-boot-starter-mail:${springStarterMailVersion}"
    }
}

project("platform-auth") {
    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-security'
        implementation "com.auth0:java-jwt:${auth0JavaJwtVersion}"
        implementation project(path: ':platform-core')
    }
}

project("customers-resources") {
    dependencies {
        implementation project(':platform-auth')
        implementation project(path: ':platform-core')
        implementation 'org.springframework.security:spring-security-core'
    }
}


dependencies {
    implementation project(':platform-auth')
    implementation project(':customers-resources')
}

tasks.named('test') {
    useJUnitPlatform()
}
