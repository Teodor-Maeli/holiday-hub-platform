plugins {
    id 'java'
    id 'org.springframework.boot' version '3.0.6'
    id 'io.spring.dependency-management' version '1.1.0'
}

def projectVersion = project.property('version')
def mapstructVersion = project.property('mapstruct.core-version')
def googleGuavaCacheVersion = project.property('google.guava.cache-version')
def projectVersionPrefix = '-SNAPSHOT'
def auth0JavaJwtVersion = project.property('auth0.java-jwt-version')

group = 'com.platform'
version = projectVersion + projectVersionPrefix
sourceCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

allprojects {
    apply plugin: 'java'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    dependencies {

        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
        implementation "org.mapstruct:mapstruct:${mapstructVersion}"
        annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"

        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        testAnnotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"

        runtimeOnly 'org.postgresql:postgresql'
    }
}

project("customers-auth") {
    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-security'
        implementation 'org.springframework.boot:spring-boot-starter-aop'
        implementation group: 'com.google.guava', name: 'guava', version: googleGuavaCacheVersion
        implementation "com.auth0:java-jwt:${auth0JavaJwtVersion}"
    }
}

dependencies {
    implementation project(':customers-auth')
    implementation project(':customers-resources')
}

tasks.named('test') {
    useJUnitPlatform()
}
